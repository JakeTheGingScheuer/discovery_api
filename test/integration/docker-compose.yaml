version: '3'
services:
  redis:
    image: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "PING"]
      interval: 5s
      timeout: 20s
      retries: 3
  redis-helper:
    image: redis
    depends_on:
    - redis
    command: >
      redis-cli -h redis set discovery-api:dataset:myguid '{
        "id": "myguid",
        "title": "Super Sweet Data",
        "keywords": ["super", "sweet", "data"],
        "organization": "The Arsenal",
        "modified": "20190823",
        "fileTypes": ["csv", "json"],
        "description": "The sweetest of data.",
        "systemName": "the_arsenal__super_sweet_data",
        "sourceUrl": "http://example.com/damn-this-data-is-hot.json",
        "sourceType": "remote"
      }'
  presto:
    image: 199837183662.dkr.ecr.us-east-2.amazonaws.com/scos/presto-testo:latest
    depends_on:
    - metastore
    - minio
    ports:
    - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:8080/v1/info | grep -q '\"starting\":false'"]
      interval: 10s
      timeout: 30s
      retries: 10
  metastore:
    image: 199837183662.dkr.ecr.us-east-2.amazonaws.com/scos/metastore-testo:latest
    depends_on:
    - postgres
    ports:
    - "9083:9083"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9083"]
      interval: 10s
      timeout: 30s
      retries: 3
    command: >
      /bin/bash -c "
        /opt/hive-metastore/bin/schematool -dbType postgres -validate || /opt/hive-metastore/bin/schematool -dbType postgres -initSchema;
        /opt/hive-metastore/bin/start-metastore"
  postgres:
    image: 199837183662.dkr.ecr.us-east-2.amazonaws.com/scos/postgres-testo:latest
    ports:
    - "5432:5432"
  minio:
    image: 199837183662.dkr.ecr.us-east-2.amazonaws.com/scos/minio-testo:latest
    ports:
    - "9000:9000"
